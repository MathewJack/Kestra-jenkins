volumes:
  postgres-data:
    driver: local
  kestra-data:
    driver: local
  kestra-tmp:
    driver: local
  jenkins_data:
    driver: local

services:
  postgres:
    image: postgres:alpine3.19
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: kestra
      POSTGRES_USER: kestra
      POSTGRES_PASSWORD: k3str4
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 30s
      timeout: 10s
      retries: 10
  jenkins:
    image: docker.io/bitnami/jenkins:2
    ports:
      - "21296:8080"
      - "50000:50000"
    environment:
      - JENKINS_PASSWORD=password
      - JENKINS_USERNAME=username
      - JENKINS_EXTERNAL_HTTP_PORT_NUMBER=21547
    volumes:
      - "jenkins_data:/bitnami/jenkins"
    restart: unless-stopped

  kestra:
    image: kestra/kestra:latest-full
    # Note that this is meant for development only. Refer to the documentation for production deployments of Kestra which runs without a root user.
    user: "root"
    command: server standalone --worker-thread=4
    volumes:
      - kestra-data:/app/storage
      - /var/run/docker.sock:/var/run/docker.sock
      - kestra-tmp:/tmp/kestra-wd
    environment:
      KESTRA_CONFIGURATION: |
        datasources:
          postgres:
            url: jdbc:postgresql://postgres:5432/kestra
            driverClassName: org.postgresql.Driver
            username: kestra
            password: k3str4
        kestra:
          server:
            basic-auth:
              enabled: true
              username: "admin@example.com" # it must be a valid email address
              password: kestra
          repository:
            type: postgres
          storage:
            type: local
            local:
              base-path: "/app/storage"
          queue:
            type: postgres
          tasks:
            tmp-dir:
              path: /tmp/kestra-wd/tmp
          url: http://localhost:8080/
    ports:
      - "45632:8080" #you can change the port number in starting based on your aviable port
      - "32443:8081"
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_started
